// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ims.data;

namespace ims.data.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20210111151021_newMigration")]
    partial class newMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ims.data.Entities.ActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_action_type");

                    b.ToTable("action_type");
                });

            modelBuilder.Entity("ims.data.Entities.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("KeyValues")
                        .HasColumnName("key_values");

                    b.Property<string>("NewValues")
                        .HasColumnName("new_values");

                    b.Property<string>("OldValues")
                        .HasColumnName("old_values");

                    b.Property<string>("TableName")
                        .HasColumnName("table_name");

                    b.Property<long>("TimeStamp")
                        .HasColumnName("time_stamp");

                    b.Property<long?>("UserAction")
                        .HasColumnName("user_action");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("p_k_audit_log");

                    b.ToTable("audit_log");
                });

            modelBuilder.Entity("ims.data.Entities.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("color_id");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnName("color_name");

                    b.HasKey("ColorId")
                        .HasName("p_k_colors");

                    b.ToTable("colors");
                });

            modelBuilder.Entity("ims.data.Entities.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("i_d");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("extentsion")
                        .HasColumnName("extentsion");

                    b.Property<string>("file")
                        .HasColumnName("file");

                    b.Property<int?>("fileID")
                        .HasColumnName("file_i_d");

                    b.Property<string>("fileName")
                        .HasColumnName("file_name");

                    b.Property<int>("type")
                        .HasColumnName("type");

                    b.HasKey("ID")
                        .HasName("p_k_documents");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("ims.data.Entities.Factory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("factory_id");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasColumnName("factory_name");

                    b.Property<string>("LocationDescription")
                        .HasColumnName("location_description");

                    b.HasKey("FactoryId")
                        .HasName("p_k_factories");

                    b.ToTable("factories");
                });

            modelBuilder.Entity("ims.data.Entities.FactoryToStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ConfirmedById")
                        .HasColumnName("confirmed_by_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("FPRR_ID")
                        .HasColumnName("f_p_r_r__i_d");

                    b.Property<int>("FPTV_Id")
                        .HasColumnName("f_p_t_v__id");

                    b.Property<int>("FactoryId")
                        .HasColumnName("factory_id");

                    b.Property<long>("InitiatorId")
                        .HasColumnName("initiator_id");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id");

                    b.Property<int>("TotalNumber")
                        .HasColumnName("total_number");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnName("workflow_id");

                    b.Property<string>("fprr")
                        .HasColumnName("fprr");

                    b.Property<string>("fptv")
                        .HasColumnName("fptv");

                    b.HasKey("Id")
                        .HasName("p_k_factory_to_stores");

                    b.HasIndex("ConfirmedById")
                        .HasName("i_x_factory_to_stores_confirmed_by_id");

                    b.HasIndex("FactoryId")
                        .HasName("i_x_factory_to_stores_factory_id");

                    b.HasIndex("InitiatorId")
                        .HasName("i_x_factory_to_stores_initiator_id");

                    b.HasIndex("StoreId")
                        .HasName("i_x_factory_to_stores_store_id");

                    b.ToTable("factory_to_stores");
                });

            modelBuilder.Entity("ims.data.Entities.MachineCode", b =>
                {
                    b.Property<int>("MachineCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("machine_code_id");

                    b.Property<string>("MachineCodeName")
                        .IsRequired()
                        .HasColumnName("machine_code_name")
                        .HasMaxLength(50);

                    b.Property<decimal>("Price")
                        .HasColumnName("price");

                    b.HasKey("MachineCodeId")
                        .HasName("p_k_machine_codes");

                    b.ToTable("machine_codes");
                });

            modelBuilder.Entity("ims.data.Entities.PurchaseToStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ConfirmedById")
                        .HasColumnName("confirmed_by_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("GRN_Id")
                        .HasColumnName("g_r_n__id");

                    b.Property<long>("InitiatorId")
                        .HasColumnName("initiator_id");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnName("invoice_number");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id");

                    b.Property<int>("SuppilerId")
                        .HasColumnName("suppiler_id");

                    b.Property<int>("TotalNumber")
                        .HasColumnName("total_number");

                    b.Property<double>("TotalPrice")
                        .HasColumnName("total_price");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnName("workflow_id");

                    b.Property<string>("grn")
                        .HasColumnName("grn");

                    b.HasKey("Id")
                        .HasName("p_k_purchase_to_stores");

                    b.HasIndex("ConfirmedById")
                        .HasName("i_x_purchase_to_stores_confirmed_by_id");

                    b.HasIndex("InitiatorId")
                        .HasName("i_x_purchase_to_stores_initiator_id");

                    b.HasIndex("StoreId")
                        .HasName("i_x_purchase_to_stores_store_id");

                    b.HasIndex("SuppilerId")
                        .HasName("i_x_purchase_to_stores_suppiler_id");

                    b.ToTable("purchase_to_stores");
                });

            modelBuilder.Entity("ims.data.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_role");

                    b.ToTable("role");
                });

            modelBuilder.Entity("ims.data.Entities.SalesReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ShopId")
                        .HasColumnName("shop_id");

                    b.Property<DateTime>("dateFrom")
                        .HasColumnName("date_from");

                    b.Property<DateTime>("dateTo")
                        .HasColumnName("date_to");

                    b.Property<string>("description")
                        .HasColumnName("description");

                    b.Property<string>("reference")
                        .HasColumnName("reference");

                    b.Property<int>("referenceId")
                        .HasColumnName("reference_id");

                    b.Property<long>("reportedBy")
                        .HasColumnName("reported_by");

                    b.Property<int>("totalNumber")
                        .HasColumnName("total_number");

                    b.HasKey("Id")
                        .HasName("p_k_sales_reports");

                    b.ToTable("sales_reports");
                });

            modelBuilder.Entity("ims.data.Entities.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("SexName")
                        .IsRequired()
                        .HasColumnName("sex_name")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("p_k_sexes");

                    b.ToTable("sexes");
                });

            modelBuilder.Entity("ims.data.Entities.Shoe", b =>
                {
                    b.Property<int>("ShoeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("shoe_id");

                    b.Property<int>("ColorId")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnName("entry_date");

                    b.Property<string>("ImageThumbnail")
                        .HasColumnName("image_thumbnail");

                    b.Property<string>("ImageUrl")
                        .HasColumnName("image_url");

                    b.Property<int?>("MachineCodeId")
                        .HasColumnName("machine_code_id");

                    b.Property<string>("ModelUnique")
                        .HasColumnName("model_unique");

                    b.Property<int>("SexId")
                        .HasColumnName("sex_id");

                    b.Property<int>("ShoeModelId")
                        .HasColumnName("shoe_model_id");

                    b.Property<int>("SizeId")
                        .HasColumnName("size_id");

                    b.Property<int?>("SoleId")
                        .HasColumnName("sole_id");

                    b.HasKey("ShoeId")
                        .HasName("p_k_shoes");

                    b.HasIndex("ColorId")
                        .HasName("i_x_shoes_color_id");

                    b.HasIndex("MachineCodeId")
                        .HasName("i_x_shoes_machine_code_id");

                    b.HasIndex("SexId")
                        .HasName("i_x_shoes_sex_id");

                    b.HasIndex("ShoeModelId")
                        .HasName("i_x_shoes_shoe_model_id");

                    b.HasIndex("SizeId")
                        .HasName("i_x_shoes_size_id");

                    b.HasIndex("SoleId")
                        .HasName("i_x_shoes_sole_id");

                    b.ToTable("shoes");
                });

            modelBuilder.Entity("ims.data.Entities.ShoeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ImageId")
                        .HasColumnName("image_id");

                    b.Property<string>("ImageThumbnail")
                        .HasColumnName("image_thumbnail");

                    b.Property<string>("ImageUrl")
                        .HasColumnName("image_url");

                    b.Property<int>("MachineCodeId")
                        .HasColumnName("machine_code_id");

                    b.Property<string>("ModelName")
                        .HasColumnName("model_name");

                    b.Property<int>("SoleId")
                        .HasColumnName("sole_id");

                    b.HasKey("Id")
                        .HasName("p_k_shoe_models");

                    b.HasIndex("MachineCodeId")
                        .HasName("i_x_shoe_models_machine_code_id");

                    b.HasIndex("SoleId")
                        .HasName("i_x_shoe_models_sole_id");

                    b.ToTable("shoe_models");
                });

            modelBuilder.Entity("ims.data.Entities.ShoeTransactionList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("i_d");

                    b.Property<int?>("FactoryToStoreId")
                        .HasColumnName("factory_to_store_id");

                    b.Property<int?>("PurchaseToStoreId")
                        .HasColumnName("purchase_to_store_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity");

                    b.Property<int>("ShoeId")
                        .HasColumnName("shoe_id");

                    b.Property<int?>("ShopToStoreId")
                        .HasColumnName("shop_to_store_id");

                    b.Property<int?>("StoreToShopId")
                        .HasColumnName("store_to_shop_id");

                    b.Property<int>("TransactionId")
                        .HasColumnName("transaction_id");

                    b.Property<int>("TransactionType")
                        .HasColumnName("transaction_type");

                    b.Property<double?>("UnitPrice")
                        .HasColumnName("unit_price");

                    b.HasKey("ID")
                        .HasName("p_k_shoe_transaction_lists");

                    b.HasIndex("FactoryToStoreId")
                        .HasName("i_x_shoe_transaction_lists_factory_to_store_id");

                    b.HasIndex("PurchaseToStoreId")
                        .HasName("i_x_shoe_transaction_lists_purchase_to_store_id");

                    b.HasIndex("ShoeId")
                        .HasName("i_x_shoe_transaction_lists_shoe_id");

                    b.HasIndex("ShopToStoreId")
                        .HasName("i_x_shoe_transaction_lists_shop_to_store_id");

                    b.HasIndex("StoreToShopId")
                        .HasName("i_x_shoe_transaction_lists_store_to_shop_id");

                    b.ToTable("shoe_transaction_lists");
                });

            modelBuilder.Entity("ims.data.Entities.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("shop_id");

                    b.Property<int?>("ShopId1")
                        .HasColumnName("shop_id1");

                    b.Property<string>("ShopLocation")
                        .HasColumnName("shop_location");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasColumnName("shop_name")
                        .HasMaxLength(50);

                    b.HasKey("ShopId")
                        .HasName("p_k_shops");

                    b.HasIndex("ShopId1")
                        .HasName("i_x_shops_shop_id1");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("ims.data.Entities.ShopStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<int>("SeqNo")
                        .HasColumnName("seq_no");

                    b.Property<int>("ShoeId")
                        .HasColumnName("shoe_id");

                    b.Property<int>("ShopId")
                        .HasColumnName("shop_id");

                    b.Property<int>("Stock")
                        .HasColumnName("stock");

                    b.HasKey("Id")
                        .HasName("p_k_shop_stocks");

                    b.HasIndex("ShoeId")
                        .HasName("i_x_shop_stocks_shoe_id");

                    b.HasIndex("ShopId")
                        .HasName("i_x_shop_stocks_shop_id");

                    b.ToTable("shop_stocks");
                });

            modelBuilder.Entity("ims.data.Entities.ShopToStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ConfirmedById")
                        .HasColumnName("confirmed_by_id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("InitiatorId")
                        .HasColumnName("initiator_id");

                    b.Property<int>("MRN_Id")
                        .HasColumnName("m_r_n__id");

                    b.Property<int>("ShopId")
                        .HasColumnName("shop_id");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id");

                    b.Property<int>("TotalNumber")
                        .HasColumnName("total_number");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnName("workflow_id");

                    b.Property<string>("mrn")
                        .HasColumnName("mrn");

                    b.HasKey("Id")
                        .HasName("p_k_shop_to_stores");

                    b.HasIndex("ConfirmedById")
                        .HasName("i_x_shop_to_stores_confirmed_by_id");

                    b.HasIndex("InitiatorId")
                        .HasName("i_x_shop_to_stores_initiator_id");

                    b.HasIndex("ShopId")
                        .HasName("i_x_shop_to_stores_shop_id");

                    b.HasIndex("StoreId")
                        .HasName("i_x_shop_to_stores_store_id");

                    b.ToTable("shop_to_stores");
                });

            modelBuilder.Entity("ims.data.Entities.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("size_id");

                    b.Property<int>("SizeNumber")
                        .HasColumnName("size_number");

                    b.HasKey("SizeId")
                        .HasName("p_k_sizes");

                    b.ToTable("sizes");
                });

            modelBuilder.Entity("ims.data.Entities.Sole", b =>
                {
                    b.Property<int>("SoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sole_id");

                    b.Property<string>("SoleName")
                        .IsRequired()
                        .HasColumnName("sole_name")
                        .HasMaxLength(50);

                    b.HasKey("SoleId")
                        .HasName("p_k_soles");

                    b.ToTable("soles");
                });

            modelBuilder.Entity("ims.data.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnName("amount");

                    b.Property<int>("ShoeId")
                        .HasColumnName("shoe_id");

                    b.Property<int>("SizeId")
                        .HasColumnName("size_id");

                    b.HasKey("Id")
                        .HasName("p_k_stocks");

                    b.HasIndex("ShoeId")
                        .HasName("i_x_stocks_shoe_id");

                    b.HasIndex("SizeId")
                        .HasName("i_x_stocks_size_id");

                    b.ToTable("stocks");
                });

            modelBuilder.Entity("ims.data.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_stores");

                    b.ToTable("stores");
                });

            modelBuilder.Entity("ims.data.Entities.StoreStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Amount")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<int>("SeqNo")
                        .HasColumnName("seq_no");

                    b.Property<int>("ShoeId")
                        .HasColumnName("shoe_id");

                    b.Property<int>("Stock")
                        .HasColumnName("stock");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id");

                    b.HasKey("Id")
                        .HasName("p_k_store_stocks");

                    b.HasIndex("ShoeId")
                        .HasName("i_x_store_stocks_shoe_id");

                    b.HasIndex("StoreId")
                        .HasName("i_x_store_stocks_store_id");

                    b.ToTable("store_stocks");
                });

            modelBuilder.Entity("ims.data.Entities.StoreToShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("ConfirmedById")
                        .HasColumnName("confirmed_by_id");

                    b.Property<int>("DN_Id")
                        .HasColumnName("d_n__id");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<long>("InitiatorId")
                        .HasColumnName("initiator_id");

                    b.Property<int>("ShopId")
                        .HasColumnName("shop_id");

                    b.Property<int>("StoreId")
                        .HasColumnName("store_id");

                    b.Property<int>("TotalNumber")
                        .HasColumnName("total_number");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnName("workflow_id");

                    b.Property<string>("dn")
                        .HasColumnName("dn");

                    b.HasKey("Id")
                        .HasName("p_k_store_to_shops");

                    b.HasIndex("ConfirmedById")
                        .HasName("i_x_store_to_shops_confirmed_by_id");

                    b.HasIndex("InitiatorId")
                        .HasName("i_x_store_to_shops_initiator_id");

                    b.HasIndex("ShopId")
                        .HasName("i_x_store_to_shops_shop_id");

                    b.HasIndex("StoreId")
                        .HasName("i_x_store_to_shops_store_id");

                    b.ToTable("store_to_shops");
                });

            modelBuilder.Entity("ims.data.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("i_d");

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("TIN")
                        .HasColumnName("t_i_n");

                    b.HasKey("ID")
                        .HasName("p_k_suppliers");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("ims.data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<int?>("Employeeid")
                        .HasColumnName("employeeid");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnName("phone_no");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnName("position");

                    b.Property<long>("Regon")
                        .HasColumnName("regon");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("p_k_user");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ims.data.Entities.UserAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Actiontypeid")
                        .HasColumnName("actiontypeid");

                    b.Property<string>("Remark")
                        .HasColumnName("remark");

                    b.Property<long?>("Timestamp")
                        .HasColumnName("timestamp");

                    b.Property<string>("Username")
                        .HasColumnName("username");

                    b.Property<long?>("Usernamenavigationid")
                        .HasColumnName("usernamenavigationid");

                    b.HasKey("Id")
                        .HasName("p_k_user_action");

                    b.HasIndex("Actiontypeid")
                        .HasName("i_x_user_action_actiontypeid");

                    b.HasIndex("Usernamenavigationid")
                        .HasName("i_x_user_action_usernamenavigationid");

                    b.ToTable("user_action");
                });

            modelBuilder.Entity("ims.data.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("Aid")
                        .HasColumnName("aid");

                    b.Property<long>("Roleid")
                        .HasColumnName("roleid");

                    b.Property<long>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("p_k_user_role");

                    b.HasIndex("Aid")
                        .HasName("i_x_user_role_aid");

                    b.HasIndex("Roleid")
                        .HasName("i_x_user_role_roleid");

                    b.HasIndex("Userid")
                        .HasName("i_x_user_role_userid");

                    b.ToTable("user_role");
                });

            modelBuilder.Entity("ims.data.Entities.WorkItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("Aid")
                        .HasColumnName("aid");

                    b.Property<long?>("Assignedrole")
                        .HasColumnName("assignedrole");

                    b.Property<long?>("Assignedrolenavigationid")
                        .HasColumnName("assignedrolenavigationid");

                    b.Property<long?>("Assigneduser")
                        .HasColumnName("assigneduser");

                    b.Property<long?>("AssignedusernaviagtionId")
                        .HasColumnName("assignedusernaviagtion_id");

                    b.Property<long?>("Assignedusernavigationid")
                        .HasColumnName("assignedusernavigationid");

                    b.Property<string>("Data")
                        .HasColumnName("data");

                    b.Property<string>("Datatype")
                        .HasColumnName("datatype");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("Fromstate")
                        .HasColumnName("fromstate");

                    b.Property<int>("Seqno")
                        .HasColumnName("seqno");

                    b.Property<int>("Trigger")
                        .HasColumnName("trigger");

                    b.Property<Guid>("WorkflowId")
                        .HasColumnName("workflow_id");

                    b.HasKey("Id")
                        .HasName("p_k_work_item");

                    b.HasIndex("Aid")
                        .HasName("i_x_work_item_aid");

                    b.HasIndex("Assignedrolenavigationid")
                        .HasName("i_x_work_item_assignedrolenavigationid");

                    b.HasIndex("AssignedusernaviagtionId")
                        .HasName("i_x_work_item_assignedusernaviagtion_id");

                    b.HasIndex("WorkflowId")
                        .HasName("i_x_work_item_workflow_id");

                    b.ToTable("work_item");
                });

            modelBuilder.Entity("ims.data.Entities.Workflow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long?>("Aid")
                        .HasColumnName("aid");

                    b.Property<int>("Currentstate")
                        .HasColumnName("currentstate");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Employeeid")
                        .HasColumnName("employeeid");

                    b.Property<string>("Initiatoruser")
                        .HasColumnName("initiatoruser");

                    b.Property<string>("Observer")
                        .HasColumnName("observer");

                    b.Property<Guid?>("Parentwfid")
                        .HasColumnName("parentwfid");

                    b.Property<int>("Typeid")
                        .HasColumnName("typeid");

                    b.HasKey("Id")
                        .HasName("p_k_workflow");

                    b.HasIndex("Aid")
                        .HasName("i_x_workflow_aid");

                    b.HasIndex("Typeid")
                        .HasName("i_x_workflow_typeid");

                    b.ToTable("workflow");
                });

            modelBuilder.Entity("ims.data.Entities.WorkflowDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Contentdisposition")
                        .HasColumnName("contentdisposition");

                    b.Property<string>("Contenttype")
                        .HasColumnName("contenttype");

                    b.Property<byte[]>("File")
                        .HasColumnName("file");

                    b.Property<string>("Filename")
                        .HasColumnName("filename");

                    b.Property<int?>("Index")
                        .HasColumnName("index");

                    b.Property<long>("Length")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<Guid>("Workflowid")
                        .HasColumnName("workflowid");

                    b.HasKey("Id")
                        .HasName("p_k_workflow_documents");

                    b.ToTable("workflow_documents");
                });

            modelBuilder.Entity("ims.data.Entities.WorkflowType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_workflow_type");

                    b.ToTable("workflow_type");
                });

            modelBuilder.Entity("ims.data.Entities.FactoryToStore", b =>
                {
                    b.HasOne("ims.data.Entities.User", "ConfirmedBy")
                        .WithMany()
                        .HasForeignKey("ConfirmedById")
                        .HasConstraintName("f_k_factory_to_stores__user_confirmed_by_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("FactoryId")
                        .HasConstraintName("f_k_factory_to_stores_factories_factory_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .HasConstraintName("f_k_factory_to_stores__user_initiator_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .HasConstraintName("f_k_factory_to_stores__stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.PurchaseToStore", b =>
                {
                    b.HasOne("ims.data.Entities.User", "ConfirmedBy")
                        .WithMany()
                        .HasForeignKey("ConfirmedById")
                        .HasConstraintName("f_k_purchase_to_stores__user_confirmed_by_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .HasConstraintName("f_k_purchase_to_stores__user_initiator_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .HasConstraintName("f_k_purchase_to_stores__stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SuppilerId")
                        .HasConstraintName("f_k_purchase_to_stores__suppliers_suppiler_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.Shoe", b =>
                {
                    b.HasOne("ims.data.Entities.Color", "Color")
                        .WithMany("Shoes")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("f_k_shoes_colors_color_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.MachineCode")
                        .WithMany("Shoes")
                        .HasForeignKey("MachineCodeId")
                        .HasConstraintName("f_k_shoes_machine_codes_machine_code_id");

                    b.HasOne("ims.data.Entities.Sex", "Sex")
                        .WithMany("Shoes")
                        .HasForeignKey("SexId")
                        .HasConstraintName("f_k_shoes_sexes_sex_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.ShoeModel", "ShoeModel")
                        .WithMany("Shoes")
                        .HasForeignKey("ShoeModelId")
                        .HasConstraintName("f_k_shoes__shoe_models_shoe_model_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Size", "Size")
                        .WithMany("Shoes")
                        .HasForeignKey("SizeId")
                        .HasConstraintName("f_k_shoes__sizes_size_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Sole")
                        .WithMany("Shoes")
                        .HasForeignKey("SoleId")
                        .HasConstraintName("f_k_shoes__soles_sole_id");
                });

            modelBuilder.Entity("ims.data.Entities.ShoeModel", b =>
                {
                    b.HasOne("ims.data.Entities.MachineCode", "MachineCode")
                        .WithMany()
                        .HasForeignKey("MachineCodeId")
                        .HasConstraintName("f_k_shoe_models_machine_codes_machine_code_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Sole", "Sole")
                        .WithMany()
                        .HasForeignKey("SoleId")
                        .HasConstraintName("f_k_shoe_models__soles_sole_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.ShoeTransactionList", b =>
                {
                    b.HasOne("ims.data.Entities.FactoryToStore")
                        .WithMany("ShoeList")
                        .HasForeignKey("FactoryToStoreId")
                        .HasConstraintName("f_k_shoe_transaction_lists_factory_to_stores_factory_to_store_id");

                    b.HasOne("ims.data.Entities.PurchaseToStore")
                        .WithMany("ShoeList")
                        .HasForeignKey("PurchaseToStoreId")
                        .HasConstraintName("f_k_shoe_transaction_lists_purchase_to_stores_purchase_to_store~");

                    b.HasOne("ims.data.Entities.Shoe", "Shoe")
                        .WithMany()
                        .HasForeignKey("ShoeId")
                        .HasConstraintName("f_k_shoe_transaction_lists_shoes_shoe_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.ShopToStore")
                        .WithMany("ShoeList")
                        .HasForeignKey("ShopToStoreId")
                        .HasConstraintName("f_k_shoe_transaction_lists__shop_to_stores_shop_to_store_id");

                    b.HasOne("ims.data.Entities.StoreToShop")
                        .WithMany("ShoeList")
                        .HasForeignKey("StoreToShopId")
                        .HasConstraintName("f_k_shoe_transaction_lists__store_to_shops_store_to_shop_id");
                });

            modelBuilder.Entity("ims.data.Entities.Shop", b =>
                {
                    b.HasOne("ims.data.Entities.Shop")
                        .WithMany("Shops")
                        .HasForeignKey("ShopId1")
                        .HasConstraintName("f_k_shops_shops_shop_id1");
                });

            modelBuilder.Entity("ims.data.Entities.ShopStock", b =>
                {
                    b.HasOne("ims.data.Entities.Shoe", "Shoe")
                        .WithMany()
                        .HasForeignKey("ShoeId")
                        .HasConstraintName("f_k_shop_stocks_shoes_shoe_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .HasConstraintName("f_k_shop_stocks_shops_shop_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.ShopToStore", b =>
                {
                    b.HasOne("ims.data.Entities.User", "ConfirmedBy")
                        .WithMany()
                        .HasForeignKey("ConfirmedById")
                        .HasConstraintName("f_k_shop_to_stores__user_confirmed_by_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .HasConstraintName("f_k_shop_to_stores__user_initiator_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .HasConstraintName("f_k_shop_to_stores_shops_shop_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .HasConstraintName("f_k_shop_to_stores__stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.Stock", b =>
                {
                    b.HasOne("ims.data.Entities.Shoe", "Shoe")
                        .WithMany()
                        .HasForeignKey("ShoeId")
                        .HasConstraintName("f_k_stocks_shoes_shoe_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .HasConstraintName("f_k_stocks_sizes_size_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.StoreStock", b =>
                {
                    b.HasOne("ims.data.Entities.Shoe", "Shoe")
                        .WithMany()
                        .HasForeignKey("ShoeId")
                        .HasConstraintName("f_k_store_stocks_shoes_shoe_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .HasConstraintName("f_k_store_stocks_stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.StoreToShop", b =>
                {
                    b.HasOne("ims.data.Entities.User", "ConfirmedBy")
                        .WithMany()
                        .HasForeignKey("ConfirmedById")
                        .HasConstraintName("f_k_store_to_shops__user_confirmed_by_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId")
                        .HasConstraintName("f_k_store_to_shops__user_initiator_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .HasConstraintName("f_k_store_to_shops_shops_shop_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .HasConstraintName("f_k_store_to_shops_stores_store_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.UserAction", b =>
                {
                    b.HasOne("ims.data.Entities.ActionType", "Actiontype")
                        .WithMany("Useraction")
                        .HasForeignKey("Actiontypeid")
                        .HasConstraintName("f_k_user_action_action_type_actiontypeid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "Usernamenavigation")
                        .WithMany("Useraction")
                        .HasForeignKey("Usernamenavigationid")
                        .HasConstraintName("f_k_user_action_user_usernamenavigationid");
                });

            modelBuilder.Entity("ims.data.Entities.UserRole", b =>
                {
                    b.HasOne("ims.data.Entities.UserAction", "A")
                        .WithMany("Userrole")
                        .HasForeignKey("Aid")
                        .HasConstraintName("f_k_user_role_user_action_aid");

                    b.HasOne("ims.data.Entities.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("Roleid")
                        .HasConstraintName("f_k_user_role_role_roleid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ims.data.Entities.User", "User")
                        .WithMany("Userrole")
                        .HasForeignKey("Userid")
                        .HasConstraintName("f_k_user_role_user_userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.WorkItem", b =>
                {
                    b.HasOne("ims.data.Entities.UserAction", "A")
                        .WithMany()
                        .HasForeignKey("Aid")
                        .HasConstraintName("f_k_work_item_user_action_aid");

                    b.HasOne("ims.data.Entities.Role", "Assignedrolenavigation")
                        .WithMany()
                        .HasForeignKey("Assignedrolenavigationid")
                        .HasConstraintName("f_k_work_item_role_assignedrolenavigationid");

                    b.HasOne("ims.data.Entities.User", "Assignedusernaviagtion")
                        .WithMany()
                        .HasForeignKey("AssignedusernaviagtionId")
                        .HasConstraintName("f_k_work_item_user_assignedusernaviagtion_id");

                    b.HasOne("ims.data.Entities.Workflow", "Workflow")
                        .WithMany("Workitem")
                        .HasForeignKey("WorkflowId")
                        .HasConstraintName("f_k_work_item__workflow_workflow_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ims.data.Entities.Workflow", b =>
                {
                    b.HasOne("ims.data.Entities.UserAction", "A")
                        .WithMany()
                        .HasForeignKey("Aid")
                        .HasConstraintName("f_k_workflow_user_action_aid");

                    b.HasOne("ims.data.Entities.WorkflowType", "Type")
                        .WithMany("Workflow")
                        .HasForeignKey("Typeid")
                        .HasConstraintName("f_k_workflow__workflow_type_typeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
